{"componentChunkName":"component---src-templates-post-jsx","path":"/mysql-innodb-acid/","result":{"data":{"site":{"siteMetadata":{"title":"kibeom"}},"markdownRemark":{"id":"da3da0ed-91b6-5c18-bed8-598b42bccdbe","excerpt":"ACID란 무엇인가 ACID는 데이터베이스 신뢰성을 위한 네 가지 핵심 속성, 즉 Atomicity(원자성), Consistency(일관성), Isolation(격리성), Durability(지속성)을 말합니다. MySQL의 스토리지 엔진 중 하나인 InnoDB 엔진에서 어떻게 ACID를 지원하는지 알아보겠습니다. InnoDB 구조 개요 InnoDB는 M…","html":"<h2 id=\"ACID란-무엇인가\" style=\"position:relative;\"><a href=\"#ACID%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"ACID란 무엇인가 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>ACID란 무엇인가</h2>\n<p>ACID는 데이터베이스 신뢰성을 위한 네 가지 핵심 속성, 즉 Atomicity(원자성), Consistency(일관성), Isolation(격리성), Durability(지속성)을 말합니다. MySQL의 스토리지 엔진 중 하나인 InnoDB 엔진에서 어떻게 ACID를 지원하는지 알아보겠습니다.</p>\n<h2 id=\"InnoDB-구조-개요\" style=\"position:relative;\"><a href=\"#InnoDB-%EA%B5%AC%EC%A1%B0-%EA%B0%9C%EC%9A%94\" aria-label=\"InnoDB 구조 개요 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>InnoDB 구조 개요</h2>\n<p>InnoDB는 Memory, MyISAM과 더불어 MySQL의 대표적인 트랜잭션 스토리지 엔진입니다.\nACID를 위해 내부적으로 트랜잭션(undo/redo 로그), 버퍼 풀, MVCC 등 다양한 메커니즘이 작동합니다.</p>\n<h3 id=\"Atomicity원자성\" style=\"position:relative;\"><a href=\"#Atomicity%EC%9B%90%EC%9E%90%EC%84%B1\" aria-label=\"Atomicity원자성 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Atomicity(원자성)</h3>\n<p>원자성이란 하나의 트랜잭션이 수행하는 작업 전체가 전부 성공하거나, 도중에 실패하면 전체가 원상복구(rollback)됨을 의미합니다.</p>\n<p>InnoDB는 언두(undo) 로그를 활용합니다:</p>\n<p>데이터 변경 시, 변경 전 기존 값을 언두 로그에 저장.\n트랜잭션이 실패하거나 ROLLBACK이 호출되면, 언두 로그를 따라 모든 변경사항이 철회됩니다.\n커밋 전에는 어떤 변경도 확정적으로 반영되지 않습니다.</p>\n<h3 id=\"Consistency일관성\" style=\"position:relative;\"><a href=\"#Consistency%EC%9D%BC%EA%B4%80%EC%84%B1\" aria-label=\"Consistency일관성 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Consistency(일관성)</h3>\n<p>일관성은 트랜잭션의 실행 전후에 데이터의 논리적 무결성이 깨지지 않음을 보장합니다.</p>\n<p>무결성은 PK/UK/외래키 제약조건, CHECK 제약, 트리거 등으로 강제됩니다.</p>\n<p>트랜잭션이 실패하거나 롤백되면 일관성을 유지한 직전 상태로 복귀함을 보장합니다.</p>\n<h3 id=\"Isolation격리성\" style=\"position:relative;\"><a href=\"#Isolation%EA%B2%A9%EB%A6%AC%EC%84%B1\" aria-label=\"Isolation격리성 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Isolation(격리성)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 여러 트랜잭션이 동시에 작업할 때, 서로 간섭하지 않아야 데이터를 왜곡 없이 처리할 수 있습니다.\n- InnoDB는 **MVCC(다중 버전 동시성 제어)**와 잠금을 병행 사용:\n    - 일반 SELECT는 언두 로그에 저장된 \"과거 버전\"으로부터, 트랜잭션 시작 시점의 일관된 스냅샷을 제공.\n- DML/SELECT FOR UPDATE 등은 실제 데이터에 잠금을 걸어 동시성 문제를 방지.\n- 격리 수준 선택:\n    - READ COMMITTED, REPEATABLE READ(기본값), SERIALIZABLE, READ UNCOMMITTED.\n    - 격리 수준이 높아질수록 동시성이 떨어지나, 데이터의 안전성이 올라감.</code></pre></div>\n<h3 id=\"Durability지속성\" style=\"position:relative;\"><a href=\"#Durability%EC%A7%80%EC%86%8D%EC%84%B1\" aria-label=\"Durability지속성 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>Durability(지속성)</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- 지속성이란 한번 커밋된 트랜잭션의 결과는 시스템 충돌/전원 장애 후에도 영구 보존됨을 보장하는 특성입니다.\n- InnoDB는 이를 위해 리두(redo) 로그를 사용:\n- 트랜잭션이 커밋되면, 변경 내용이 반드시 redo 로그에 디스크로 저장됨을 보장(innodb_flush_log_at_trx_commit 설정).\n- 버퍼 풀의 변경이 실제 데이터 파일에 늦게 반영되어도, redo 로그만 온전히 남아 있으면 장애 복구가 가능.\n- Purge/Checkpoint: 일정 시점 체크포인트 후, 기존 redo 로그 공간은 재사용; 언두 로그는 모든 참조가 끝난 후 Purge 스레드가 삭제함.\n- 실무 팁: 장애 복구를 위해 redo/undo 로그가 저장된 저장소의 안정성과 백업 정책을 강화하세요.</code></pre></div>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a>결론</h2>\n<p>MySQL InnoDB는 ACID를 엄격하게 지키기 위해 - 언두/리두 로그, 버퍼 풀, MVCC, 제약조건, 트랜잭션 관리 등 다양한 인프라를 제공합니다. - 성능과 안정성의 균형을 위해 트랜잭션 길이/격리 수준/로그 정책 등 실무 환경에 맞게 튜닝이 필요합니다.</p>\n<p>실무 관점 정리:\n• 트랜잭션활용 습관화, 짧고 명확한 구간 사용\n• 제약조건과 트리거, 적절하게 구성\n• 장애 대비를 위한 정기 백업 및 모니터링 설정\n• innodb<em>flush</em>log<em>at</em>trx_commit 등 지속성 관련 파라미터 주기적 점검\nInnoDB의 ACID는 데이터 신뢰성의 근간입니다. 확고한 원칙 위에서 튜닝과 사용법을 적절히 적용하면, 대규모 서비스에서도 안정적인 데이터 처리가 가능합니다.</p>","frontmatter":{"title":"InnoDB와 ACID","date":"September 08, 2025","update":"September 08, 2025","tags":["MySQL","InnoDB"],"series":"MySQL"},"fields":{"slug":"/mysql-innodb-acid/","readingTime":{"minutes":5.065}}},"seriesList":{"edges":[{"node":{"id":"da3da0ed-91b6-5c18-bed8-598b42bccdbe","fields":{"slug":"/mysql-innodb-acid/"},"frontmatter":{"title":"InnoDB와 ACID"}}}]},"previous":{"fields":{"slug":"/Trie/"},"frontmatter":{"title":"자료구조 - Trie"}},"next":null},"pageContext":{"id":"da3da0ed-91b6-5c18-bed8-598b42bccdbe","series":"MySQL","previousPostId":"6f147fa2-3aef-5867-92ea-c9209172a1da","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}